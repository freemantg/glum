// Mocks generated by Mockito 5.4.2 from annotations
// in glum_mood_tracker/test/infrastructure/repositories/story_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i14;
import 'dart:io' as _i8;
import 'dart:typed_data' as _i15;

import 'package:dartz/dartz.dart' as _i7;
import 'package:drift/drift.dart' as _i3;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i4;
import 'package:glum_mood_tracker/domain/failures/failures.dart' as _i12;
import 'package:glum_mood_tracker/domain/models/models.dart' as _i13;
import 'package:glum_mood_tracker/infrastructure/database/daos/daos.dart'
    as _i6;
import 'package:glum_mood_tracker/infrastructure/database/drift_database.dart'
    as _i2;
import 'package:glum_mood_tracker/infrastructure/dtos/dtos.dart' as _i9;
import 'package:glum_mood_tracker/infrastructure/repositories/photo_repository.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlumDatabase_0 extends _i1.SmartFake implements _i2.GlumDatabase {
  _FakeGlumDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_1 extends _i1.SmartFake
    implements _i3.DatabaseConnection {
  _FakeDatabaseConnection_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_2 extends _i1.SmartFake
    implements _i3.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSqlTypes_3 extends _i1.SmartFake implements _i3.SqlTypes {
  _FakeSqlTypes_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_4 extends _i1.SmartFake implements _i3.QueryExecutor {
  _FakeQueryExecutor_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_5 extends _i1.SmartFake
    implements _i4.StreamQueryStore {
  _FakeStreamQueryStore_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_6 extends _i1.SmartFake
    implements _i3.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$StoriesTable_7 extends _i1.SmartFake implements _i2.$StoriesTable {
  _Fake$StoriesTable_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PhotosTable_8 extends _i1.SmartFake implements _i2.$PhotosTable {
  _Fake$PhotosTable_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$TagsTable_9 extends _i1.SmartFake implements _i2.$TagsTable {
  _Fake$TagsTable_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$StoryTagsTable_10 extends _i1.SmartFake
    implements _i2.$StoryTagsTable {
  _Fake$StoryTagsTable_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$StoryPhotosTable_11 extends _i1.SmartFake
    implements _i2.$StoryPhotosTable {
  _Fake$StoryPhotosTable_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_12<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_13<T1 extends _i3.Table, D1> extends _i1.SmartFake
    implements _i3.InsertStatement<T1, D1> {
  _FakeInsertStatement_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_14<T extends _i3.Table, D> extends _i1.SmartFake
    implements _i3.UpdateStatement<T, D> {
  _FakeUpdateStatement_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_15<T1 extends _i3.HasResultSet, D>
    extends _i1.SmartFake implements _i3.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_16<FirstT extends _i3.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i3.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_17<T1 extends _i3.Table, D1> extends _i1.SmartFake
    implements _i3.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_18<T> extends _i1.SmartFake implements _i3.Selectable<T> {
  _FakeSelectable_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_19 extends _i1.SmartFake
    implements _i3.GenerationContext {
  _FakeGenerationContext_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrationStrategy_20 extends _i1.SmartFake
    implements _i3.MigrationStrategy {
  _FakeMigrationStrategy_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CardsTable_21 extends _i1.SmartFake implements _i2.$CardsTable {
  _Fake$CardsTable_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CardPhotosTable_22 extends _i1.SmartFake
    implements _i2.$CardPhotosTable {
  _Fake$CardPhotosTable_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStoryDao_23 extends _i1.SmartFake implements _i6.StoryDao {
  _FakeStoryDao_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTagDao_24 extends _i1.SmartFake implements _i6.TagDao {
  _FakeTagDao_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhotoDao_25 extends _i1.SmartFake implements _i6.PhotoDao {
  _FakePhotoDao_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCardDao_26 extends _i1.SmartFake implements _i6.CardDao {
  _FakeCardDao_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_27 extends _i1.SmartFake
    implements _i3.GeneratedDatabase {
  _FakeGeneratedDatabase_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_28 extends _i1.SmartFake
    implements _i3.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_29 extends _i1.SmartFake implements _i3.Migrator {
  _FakeMigrator_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_30<L, R> extends _i1.SmartFake implements _i7.Either<L, R> {
  _FakeEither_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_31 extends _i1.SmartFake implements _i8.File {
  _FakeFile_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_32 extends _i1.SmartFake implements Uri {
  _FakeUri_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDirectory_33 extends _i1.SmartFake implements _i8.Directory {
  _FakeDirectory_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_34 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRandomAccessFile_35 extends _i1.SmartFake
    implements _i8.RandomAccessFile {
  _FakeRandomAccessFile_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSink_36 extends _i1.SmartFake implements _i8.IOSink {
  _FakeIOSink_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileStat_37 extends _i1.SmartFake implements _i8.FileStat {
  _FakeFileStat_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileSystemEntity_38 extends _i1.SmartFake
    implements _i8.FileSystemEntity {
  _FakeFileSystemEntity_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StoryDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoryDao extends _i1.Mock implements _i6.StoryDao {
  MockStoryDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GlumDatabase get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeGlumDatabase_0(
          this,
          Invocation.getter(#db),
        ),
      ) as _i2.GlumDatabase);
  @override
  _i2.GlumDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGlumDatabase_0(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i2.GlumDatabase);
  @override
  _i3.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_1(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i3.DatabaseConnection);
  @override
  _i3.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_2(
          this,
          Invocation.getter(#options),
        ),
      ) as _i3.DriftDatabaseOptions);
  @override
  _i3.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _FakeSqlTypes_3(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i3.SqlTypes);
  @override
  _i3.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_4(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i3.QueryExecutor);
  @override
  _i4.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_5(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i4.StreamQueryStore);
  @override
  _i3.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_6(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i3.DatabaseConnectionUser);
  @override
  _i2.$StoriesTable get stories => (super.noSuchMethod(
        Invocation.getter(#stories),
        returnValue: _Fake$StoriesTable_7(
          this,
          Invocation.getter(#stories),
        ),
      ) as _i2.$StoriesTable);
  @override
  _i2.$PhotosTable get photos => (super.noSuchMethod(
        Invocation.getter(#photos),
        returnValue: _Fake$PhotosTable_8(
          this,
          Invocation.getter(#photos),
        ),
      ) as _i2.$PhotosTable);
  @override
  _i2.$TagsTable get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: _Fake$TagsTable_9(
          this,
          Invocation.getter(#tags),
        ),
      ) as _i2.$TagsTable);
  @override
  _i2.$StoryTagsTable get storyTags => (super.noSuchMethod(
        Invocation.getter(#storyTags),
        returnValue: _Fake$StoryTagsTable_10(
          this,
          Invocation.getter(#storyTags),
        ),
      ) as _i2.$StoryTagsTable);
  @override
  _i2.$StoryPhotosTable get storyPhotos => (super.noSuchMethod(
        Invocation.getter(#storyPhotos),
        returnValue: _Fake$StoryPhotosTable_11(
          this,
          Invocation.getter(#storyPhotos),
        ),
      ) as _i2.$StoryPhotosTable);
  @override
  _i5.Future<void> updateStoryWithTagsAndPhotos(_i9.StoryDto? storyDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateStoryWithTagsAndPhotos,
          [storyDto],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> insertStoryWithTagsAndPhotos(_i9.StoryDto? storyDto) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertStoryWithTagsAndPhotos,
          [storyDto],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> updateStory(_i9.StoryDto? storyDto) => (super.noSuchMethod(
        Invocation.method(
          #updateStory,
          [storyDto],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Stream<List<_i9.StoryDto>> watchStoriesByMonthAndYear(
          DateTime? monthYear) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchStoriesByMonthAndYear,
          [monthYear],
        ),
        returnValue: _i5.Stream<List<_i9.StoryDto>>.empty(),
      ) as _i5.Stream<List<_i9.StoryDto>>);
  @override
  _i5.Future<int> deleteStory(int? storyId) => (super.noSuchMethod(
        Invocation.method(
          #deleteStory,
          [storyId],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int?> countStories() => (super.noSuchMethod(
        Invocation.method(
          #countStories,
          [],
        ),
        returnValue: _i5.Future<int?>.value(),
      ) as _i5.Future<int?>);
  @override
  _i5.Future<double?> glumAverage() => (super.noSuchMethod(
        Invocation.method(
          #glumAverage,
          [],
        ),
        returnValue: _i5.Future<double?>.value(),
      ) as _i5.Future<double?>);
  @override
  _i5.Future<Map<int, int>> glumDistribution() => (super.noSuchMethod(
        Invocation.method(
          #glumDistribution,
          [],
        ),
        returnValue: _i5.Future<Map<int, int>>.value(<int, int>{}),
      ) as _i5.Future<Map<int, int>>);
  @override
  _i5.Future<Map<DateTime, int>> averageWeek() => (super.noSuchMethod(
        Invocation.method(
          #averageWeek,
          [],
        ),
        returnValue: _i5.Future<Map<DateTime, int>>.value(<DateTime, int>{}),
      ) as _i5.Future<Map<DateTime, int>>);
  @override
  _i5.Future<Map<DateTime, int>> yearInGlums() => (super.noSuchMethod(
        Invocation.method(
          #yearInGlums,
          [],
        ),
        returnValue: _i5.Future<Map<DateTime, int>>.value(<DateTime, int>{}),
      ) as _i5.Future<Map<DateTime, int>>);
  @override
  _i5.Stream<List<Map<String, Object?>>> createStream(
          _i4.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i5.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i5.Stream<List<Map<String, Object?>>>);
  @override
  T alias<T, D>(
    _i3.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i10.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);
  @override
  void markTablesUpdated(Iterable<_i3.TableInfo<_i3.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdates(Set<_i3.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<Set<_i3.TableUpdate>> tableUpdates(
          [_i3.TableUpdateQuery? query = const _i3.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i5.Stream<Set<_i3.TableUpdate>>.empty(),
      ) as _i5.Stream<Set<_i3.TableUpdate>>);
  @override
  _i5.Future<T> doWhenOpened<T>(
          _i5.FutureOr<T> Function(_i3.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_12<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i3.InsertStatement<T, D> into<T extends _i3.Table, D>(
          _i3.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_13<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i3.InsertStatement<T, D>);
  @override
  _i3.UpdateStatement<Tbl, R> update<Tbl extends _i3.Table, R>(
          _i3.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_14<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i3.UpdateStatement<Tbl, R>);
  @override
  _i3.SimpleSelectStatement<T, R> select<T extends _i3.HasResultSet, R>(
    _i3.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_15<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i3.SimpleSelectStatement<T, R>);
  @override
  _i3.JoinedSelectStatement<T, R> selectOnly<T extends _i3.HasResultSet, R>(
    _i3.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_16<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i3.JoinedSelectStatement<T, R>);
  @override
  _i3.DeleteStatement<T, D> delete<T extends _i3.Table, D>(
          _i3.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_17<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i3.DeleteStatement<T, D>);
  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.TableInfo<_i3.Table, dynamic>>? updates,
    _i3.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.TableInfo<_i3.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<List<_i3.QueryRow>> customWriteReturning(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.TableInfo<_i3.Table, dynamic>>? updates,
    _i3.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<List<_i3.QueryRow>>.value(<_i3.QueryRow>[]),
      ) as _i5.Future<List<_i3.QueryRow>>);
  @override
  _i3.Selectable<_i3.QueryRow> customSelect(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_18<_i3.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i3.Selectable<_i3.QueryRow>);
  @override
  _i3.Selectable<_i3.QueryRow> customSelectQuery(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_18<_i3.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i3.Selectable<_i3.QueryRow>);
  @override
  _i5.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_12<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i3.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i3.GenerationContext $write(
    _i3.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_19(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i3.GenerationContext);
  @override
  _i3.GenerationContext $writeInsertable(
    _i3.TableInfo<_i3.Table, dynamic>? table,
    _i3.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_19(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i3.GenerationContext);
  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [GlumDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlumDatabase extends _i1.Mock implements _i2.GlumDatabase {
  MockGlumDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);
  @override
  _i3.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_20(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i3.MigrationStrategy);
  @override
  _i2.$StoriesTable get stories => (super.noSuchMethod(
        Invocation.getter(#stories),
        returnValue: _Fake$StoriesTable_7(
          this,
          Invocation.getter(#stories),
        ),
      ) as _i2.$StoriesTable);
  @override
  _i2.$TagsTable get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: _Fake$TagsTable_9(
          this,
          Invocation.getter(#tags),
        ),
      ) as _i2.$TagsTable);
  @override
  _i2.$PhotosTable get photos => (super.noSuchMethod(
        Invocation.getter(#photos),
        returnValue: _Fake$PhotosTable_8(
          this,
          Invocation.getter(#photos),
        ),
      ) as _i2.$PhotosTable);
  @override
  _i2.$StoryTagsTable get storyTags => (super.noSuchMethod(
        Invocation.getter(#storyTags),
        returnValue: _Fake$StoryTagsTable_10(
          this,
          Invocation.getter(#storyTags),
        ),
      ) as _i2.$StoryTagsTable);
  @override
  _i2.$StoryPhotosTable get storyPhotos => (super.noSuchMethod(
        Invocation.getter(#storyPhotos),
        returnValue: _Fake$StoryPhotosTable_11(
          this,
          Invocation.getter(#storyPhotos),
        ),
      ) as _i2.$StoryPhotosTable);
  @override
  _i2.$CardsTable get cards => (super.noSuchMethod(
        Invocation.getter(#cards),
        returnValue: _Fake$CardsTable_21(
          this,
          Invocation.getter(#cards),
        ),
      ) as _i2.$CardsTable);
  @override
  _i2.$CardPhotosTable get cardPhotos => (super.noSuchMethod(
        Invocation.getter(#cardPhotos),
        returnValue: _Fake$CardPhotosTable_22(
          this,
          Invocation.getter(#cardPhotos),
        ),
      ) as _i2.$CardPhotosTable);
  @override
  _i6.StoryDao get storyDao => (super.noSuchMethod(
        Invocation.getter(#storyDao),
        returnValue: _FakeStoryDao_23(
          this,
          Invocation.getter(#storyDao),
        ),
      ) as _i6.StoryDao);
  @override
  _i6.TagDao get tagDao => (super.noSuchMethod(
        Invocation.getter(#tagDao),
        returnValue: _FakeTagDao_24(
          this,
          Invocation.getter(#tagDao),
        ),
      ) as _i6.TagDao);
  @override
  _i6.PhotoDao get photoDao => (super.noSuchMethod(
        Invocation.getter(#photoDao),
        returnValue: _FakePhotoDao_25(
          this,
          Invocation.getter(#photoDao),
        ),
      ) as _i6.PhotoDao);
  @override
  _i6.CardDao get cardDao => (super.noSuchMethod(
        Invocation.getter(#cardDao),
        returnValue: _FakeCardDao_26(
          this,
          Invocation.getter(#cardDao),
        ),
      ) as _i6.CardDao);
  @override
  Iterable<_i3.TableInfo<_i3.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i3.TableInfo<_i3.Table, Object?>>[],
      ) as Iterable<_i3.TableInfo<_i3.Table, Object?>>);
  @override
  List<_i3.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i3.DatabaseSchemaEntity>[],
      ) as List<_i3.DatabaseSchemaEntity>);
  @override
  _i3.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_27(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i3.GeneratedDatabase);
  @override
  _i3.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_2(
          this,
          Invocation.getter(#options),
        ),
      ) as _i3.DriftDatabaseOptions);
  @override
  _i3.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_28(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i3.StreamQueryUpdateRules);
  @override
  _i3.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_1(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i3.DatabaseConnection);
  @override
  _i3.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _FakeSqlTypes_3(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i3.SqlTypes);
  @override
  _i3.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_4(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i3.QueryExecutor);
  @override
  _i4.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_5(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i4.StreamQueryStore);
  @override
  _i3.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_6(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i3.DatabaseConnectionUser);
  @override
  _i3.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_29(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i3.Migrator);
  @override
  _i5.Future<void> beforeOpen(
    _i3.QueryExecutor? executor,
    _i3.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Stream<List<Map<String, Object?>>> createStream(
          _i4.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i5.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i5.Stream<List<Map<String, Object?>>>);
  @override
  T alias<T, D>(
    _i3.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i10.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);
  @override
  void markTablesUpdated(Iterable<_i3.TableInfo<_i3.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdates(Set<_i3.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<Set<_i3.TableUpdate>> tableUpdates(
          [_i3.TableUpdateQuery? query = const _i3.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i5.Stream<Set<_i3.TableUpdate>>.empty(),
      ) as _i5.Stream<Set<_i3.TableUpdate>>);
  @override
  _i5.Future<T> doWhenOpened<T>(
          _i5.FutureOr<T> Function(_i3.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_12<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i3.InsertStatement<T, D> into<T extends _i3.Table, D>(
          _i3.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_13<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i3.InsertStatement<T, D>);
  @override
  _i3.UpdateStatement<Tbl, R> update<Tbl extends _i3.Table, R>(
          _i3.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_14<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i3.UpdateStatement<Tbl, R>);
  @override
  _i3.SimpleSelectStatement<T, R> select<T extends _i3.HasResultSet, R>(
    _i3.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_15<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i3.SimpleSelectStatement<T, R>);
  @override
  _i3.JoinedSelectStatement<T, R> selectOnly<T extends _i3.HasResultSet, R>(
    _i3.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_16<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i3.JoinedSelectStatement<T, R>);
  @override
  _i3.DeleteStatement<T, D> delete<T extends _i3.Table, D>(
          _i3.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_17<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i3.DeleteStatement<T, D>);
  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.TableInfo<_i3.Table, dynamic>>? updates,
    _i3.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.TableInfo<_i3.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<List<_i3.QueryRow>> customWriteReturning(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.TableInfo<_i3.Table, dynamic>>? updates,
    _i3.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i5.Future<List<_i3.QueryRow>>.value(<_i3.QueryRow>[]),
      ) as _i5.Future<List<_i3.QueryRow>>);
  @override
  _i3.Selectable<_i3.QueryRow> customSelect(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_18<_i3.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i3.Selectable<_i3.QueryRow>);
  @override
  _i3.Selectable<_i3.QueryRow> customSelectQuery(
    String? query, {
    List<_i3.Variable<Object>>? variables = const [],
    Set<_i3.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_18<_i3.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i3.Selectable<_i3.QueryRow>);
  @override
  _i5.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_12<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i5.Future<T>);
  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i3.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i3.GenerationContext $write(
    _i3.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_19(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i3.GenerationContext);
  @override
  _i3.GenerationContext $writeInsertable(
    _i3.TableInfo<_i3.Table, dynamic>? table,
    _i3.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_19(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i3.GenerationContext);
  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [PhotoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoRepository extends _i1.Mock implements _i11.PhotoRepository {
  MockPhotoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i7.Either<_i12.PhotoFailure, List<_i13.PhotoModel>>>
      getAllPhotos() => (super.noSuchMethod(
            Invocation.method(
              #getAllPhotos,
              [],
            ),
            returnValue: _i5.Future<
                    _i7.Either<_i12.PhotoFailure, List<_i13.PhotoModel>>>.value(
                _FakeEither_30<_i12.PhotoFailure, List<_i13.PhotoModel>>(
              this,
              Invocation.method(
                #getAllPhotos,
                [],
              ),
            )),
          ) as _i5
              .Future<_i7.Either<_i12.PhotoFailure, List<_i13.PhotoModel>>>);
  @override
  _i5.Future<
      _i7
          .Either<_i12.PhotoFailure, _i13.PhotoModel>> pickAndCropPhoto() =>
      (super.noSuchMethod(
        Invocation.method(
          #pickAndCropPhoto,
          [],
        ),
        returnValue:
            _i5.Future<_i7.Either<_i12.PhotoFailure, _i13.PhotoModel>>.value(
                _FakeEither_30<_i12.PhotoFailure, _i13.PhotoModel>(
          this,
          Invocation.method(
            #pickAndCropPhoto,
            [],
          ),
        )),
      ) as _i5.Future<_i7.Either<_i12.PhotoFailure, _i13.PhotoModel>>);
  @override
  _i5.Future<_i8.File> savePhoto(_i13.PhotoModel? photo) => (super.noSuchMethod(
        Invocation.method(
          #savePhoto,
          [photo],
        ),
        returnValue: _i5.Future<_i8.File>.value(_FakeFile_31(
          this,
          Invocation.method(
            #savePhoto,
            [photo],
          ),
        )),
      ) as _i5.Future<_i8.File>);
}

/// A class which mocks [File].
///
/// See the documentation for Mockito's code generation for more information.
class MockFile extends _i1.Mock implements _i8.File {
  MockFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.File get absolute => (super.noSuchMethod(
        Invocation.getter(#absolute),
        returnValue: _FakeFile_31(
          this,
          Invocation.getter(#absolute),
        ),
      ) as _i8.File);
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
      ) as String);
  @override
  Uri get uri => (super.noSuchMethod(
        Invocation.getter(#uri),
        returnValue: _FakeUri_32(
          this,
          Invocation.getter(#uri),
        ),
      ) as Uri);
  @override
  bool get isAbsolute => (super.noSuchMethod(
        Invocation.getter(#isAbsolute),
        returnValue: false,
      ) as bool);
  @override
  _i8.Directory get parent => (super.noSuchMethod(
        Invocation.getter(#parent),
        returnValue: _FakeDirectory_33(
          this,
          Invocation.getter(#parent),
        ),
      ) as _i8.Directory);
  @override
  _i5.Future<_i8.File> create({
    bool? recursive = false,
    bool? exclusive = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
          {
            #recursive: recursive,
            #exclusive: exclusive,
          },
        ),
        returnValue: _i5.Future<_i8.File>.value(_FakeFile_31(
          this,
          Invocation.method(
            #create,
            [],
            {
              #recursive: recursive,
              #exclusive: exclusive,
            },
          ),
        )),
      ) as _i5.Future<_i8.File>);
  @override
  void createSync({
    bool? recursive = false,
    bool? exclusive = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #createSync,
          [],
          {
            #recursive: recursive,
            #exclusive: exclusive,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i8.File> rename(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #rename,
          [newPath],
        ),
        returnValue: _i5.Future<_i8.File>.value(_FakeFile_31(
          this,
          Invocation.method(
            #rename,
            [newPath],
          ),
        )),
      ) as _i5.Future<_i8.File>);
  @override
  _i8.File renameSync(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #renameSync,
          [newPath],
        ),
        returnValue: _FakeFile_31(
          this,
          Invocation.method(
            #renameSync,
            [newPath],
          ),
        ),
      ) as _i8.File);
  @override
  _i5.Future<_i8.File> copy(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #copy,
          [newPath],
        ),
        returnValue: _i5.Future<_i8.File>.value(_FakeFile_31(
          this,
          Invocation.method(
            #copy,
            [newPath],
          ),
        )),
      ) as _i5.Future<_i8.File>);
  @override
  _i8.File copySync(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #copySync,
          [newPath],
        ),
        returnValue: _FakeFile_31(
          this,
          Invocation.method(
            #copySync,
            [newPath],
          ),
        ),
      ) as _i8.File);
  @override
  _i5.Future<int> length() => (super.noSuchMethod(
        Invocation.method(
          #length,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  int lengthSync() => (super.noSuchMethod(
        Invocation.method(
          #lengthSync,
          [],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i5.Future<DateTime> lastAccessed() => (super.noSuchMethod(
        Invocation.method(
          #lastAccessed,
          [],
        ),
        returnValue: _i5.Future<DateTime>.value(_FakeDateTime_34(
          this,
          Invocation.method(
            #lastAccessed,
            [],
          ),
        )),
      ) as _i5.Future<DateTime>);
  @override
  DateTime lastAccessedSync() => (super.noSuchMethod(
        Invocation.method(
          #lastAccessedSync,
          [],
        ),
        returnValue: _FakeDateTime_34(
          this,
          Invocation.method(
            #lastAccessedSync,
            [],
          ),
        ),
      ) as DateTime);
  @override
  _i5.Future<dynamic> setLastAccessed(DateTime? time) => (super.noSuchMethod(
        Invocation.method(
          #setLastAccessed,
          [time],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  void setLastAccessedSync(DateTime? time) => super.noSuchMethod(
        Invocation.method(
          #setLastAccessedSync,
          [time],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<DateTime> lastModified() => (super.noSuchMethod(
        Invocation.method(
          #lastModified,
          [],
        ),
        returnValue: _i5.Future<DateTime>.value(_FakeDateTime_34(
          this,
          Invocation.method(
            #lastModified,
            [],
          ),
        )),
      ) as _i5.Future<DateTime>);
  @override
  DateTime lastModifiedSync() => (super.noSuchMethod(
        Invocation.method(
          #lastModifiedSync,
          [],
        ),
        returnValue: _FakeDateTime_34(
          this,
          Invocation.method(
            #lastModifiedSync,
            [],
          ),
        ),
      ) as DateTime);
  @override
  _i5.Future<dynamic> setLastModified(DateTime? time) => (super.noSuchMethod(
        Invocation.method(
          #setLastModified,
          [time],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  void setLastModifiedSync(DateTime? time) => super.noSuchMethod(
        Invocation.method(
          #setLastModifiedSync,
          [time],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i8.RandomAccessFile> open(
          {_i8.FileMode? mode = _i8.FileMode.read}) =>
      (super.noSuchMethod(
        Invocation.method(
          #open,
          [],
          {#mode: mode},
        ),
        returnValue:
            _i5.Future<_i8.RandomAccessFile>.value(_FakeRandomAccessFile_35(
          this,
          Invocation.method(
            #open,
            [],
            {#mode: mode},
          ),
        )),
      ) as _i5.Future<_i8.RandomAccessFile>);
  @override
  _i8.RandomAccessFile openSync({_i8.FileMode? mode = _i8.FileMode.read}) =>
      (super.noSuchMethod(
        Invocation.method(
          #openSync,
          [],
          {#mode: mode},
        ),
        returnValue: _FakeRandomAccessFile_35(
          this,
          Invocation.method(
            #openSync,
            [],
            {#mode: mode},
          ),
        ),
      ) as _i8.RandomAccessFile);
  @override
  _i5.Stream<List<int>> openRead([
    int? start,
    int? end,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #openRead,
          [
            start,
            end,
          ],
        ),
        returnValue: _i5.Stream<List<int>>.empty(),
      ) as _i5.Stream<List<int>>);
  @override
  _i8.IOSink openWrite({
    _i8.FileMode? mode = _i8.FileMode.write,
    _i14.Encoding? encoding = const _i14.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openWrite,
          [],
          {
            #mode: mode,
            #encoding: encoding,
          },
        ),
        returnValue: _FakeIOSink_36(
          this,
          Invocation.method(
            #openWrite,
            [],
            {
              #mode: mode,
              #encoding: encoding,
            },
          ),
        ),
      ) as _i8.IOSink);
  @override
  _i5.Future<_i15.Uint8List> readAsBytes() => (super.noSuchMethod(
        Invocation.method(
          #readAsBytes,
          [],
        ),
        returnValue: _i5.Future<_i15.Uint8List>.value(_i15.Uint8List(0)),
      ) as _i5.Future<_i15.Uint8List>);
  @override
  _i15.Uint8List readAsBytesSync() => (super.noSuchMethod(
        Invocation.method(
          #readAsBytesSync,
          [],
        ),
        returnValue: _i15.Uint8List(0),
      ) as _i15.Uint8List);
  @override
  _i5.Future<String> readAsString(
          {_i14.Encoding? encoding = const _i14.Utf8Codec()}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAsString,
          [],
          {#encoding: encoding},
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  String readAsStringSync({_i14.Encoding? encoding = const _i14.Utf8Codec()}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAsStringSync,
          [],
          {#encoding: encoding},
        ),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<List<String>> readAsLines(
          {_i14.Encoding? encoding = const _i14.Utf8Codec()}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAsLines,
          [],
          {#encoding: encoding},
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);
  @override
  List<String> readAsLinesSync(
          {_i14.Encoding? encoding = const _i14.Utf8Codec()}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAsLinesSync,
          [],
          {#encoding: encoding},
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i5.Future<_i8.File> writeAsBytes(
    List<int>? bytes, {
    _i8.FileMode? mode = _i8.FileMode.write,
    bool? flush = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeAsBytes,
          [bytes],
          {
            #mode: mode,
            #flush: flush,
          },
        ),
        returnValue: _i5.Future<_i8.File>.value(_FakeFile_31(
          this,
          Invocation.method(
            #writeAsBytes,
            [bytes],
            {
              #mode: mode,
              #flush: flush,
            },
          ),
        )),
      ) as _i5.Future<_i8.File>);
  @override
  void writeAsBytesSync(
    List<int>? bytes, {
    _i8.FileMode? mode = _i8.FileMode.write,
    bool? flush = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #writeAsBytesSync,
          [bytes],
          {
            #mode: mode,
            #flush: flush,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i8.File> writeAsString(
    String? contents, {
    _i8.FileMode? mode = _i8.FileMode.write,
    _i14.Encoding? encoding = const _i14.Utf8Codec(),
    bool? flush = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeAsString,
          [contents],
          {
            #mode: mode,
            #encoding: encoding,
            #flush: flush,
          },
        ),
        returnValue: _i5.Future<_i8.File>.value(_FakeFile_31(
          this,
          Invocation.method(
            #writeAsString,
            [contents],
            {
              #mode: mode,
              #encoding: encoding,
              #flush: flush,
            },
          ),
        )),
      ) as _i5.Future<_i8.File>);
  @override
  void writeAsStringSync(
    String? contents, {
    _i8.FileMode? mode = _i8.FileMode.write,
    _i14.Encoding? encoding = const _i14.Utf8Codec(),
    bool? flush = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #writeAsStringSync,
          [contents],
          {
            #mode: mode,
            #encoding: encoding,
            #flush: flush,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<bool> exists() => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  bool existsSync() => (super.noSuchMethod(
        Invocation.method(
          #existsSync,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<String> resolveSymbolicLinks() => (super.noSuchMethod(
        Invocation.method(
          #resolveSymbolicLinks,
          [],
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  String resolveSymbolicLinksSync() => (super.noSuchMethod(
        Invocation.method(
          #resolveSymbolicLinksSync,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<_i8.FileStat> stat() => (super.noSuchMethod(
        Invocation.method(
          #stat,
          [],
        ),
        returnValue: _i5.Future<_i8.FileStat>.value(_FakeFileStat_37(
          this,
          Invocation.method(
            #stat,
            [],
          ),
        )),
      ) as _i5.Future<_i8.FileStat>);
  @override
  _i8.FileStat statSync() => (super.noSuchMethod(
        Invocation.method(
          #statSync,
          [],
        ),
        returnValue: _FakeFileStat_37(
          this,
          Invocation.method(
            #statSync,
            [],
          ),
        ),
      ) as _i8.FileStat);
  @override
  _i5.Future<_i8.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#recursive: recursive},
        ),
        returnValue:
            _i5.Future<_i8.FileSystemEntity>.value(_FakeFileSystemEntity_38(
          this,
          Invocation.method(
            #delete,
            [],
            {#recursive: recursive},
          ),
        )),
      ) as _i5.Future<_i8.FileSystemEntity>);
  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
        Invocation.method(
          #deleteSync,
          [],
          {#recursive: recursive},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<_i8.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [],
          {
            #events: events,
            #recursive: recursive,
          },
        ),
        returnValue: _i5.Stream<_i8.FileSystemEvent>.empty(),
      ) as _i5.Stream<_i8.FileSystemEvent>);
}
